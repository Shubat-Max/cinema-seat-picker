{"version":3,"sources":["reducers/session.js","config/actionconst.js","reducers/order.js","reducers/index.js","store/index.js","components/Session/Session.sc.js","components/Session/Picker/Picker.sc.js","components/Session/Picker/Row/Row.cs.js","components/Session/Picker/Seat/Seat.sc.js","actions/session.js","components/Session/Picker/Seat/index.js","actions/order.js","components/Session/Picker/Row/index.js","components/Session/Picker/index.js","components/Session/Legend/Legend.sc.js","components/Session/Legend/index.js","components/Session/Footer/Footer.sc.js","components/Session/Footer/index.js","components/Session/Header/Header.sc.js","components/Session/Header/index.js","components/Loader/index.js","components/Session/index.js","components/App.js","serviceWorker.js","index.js"],"names":["HallModel","Record","name","rows","SessionModel","hallTitle","movieTitle","timestamp","place","country","city","hall","defaultSession","entities","loading","loaded","session","action","type","payload","LOAD_SESSION","set","update","mergeDeep","updateIn","row_id","seat_id","value","isSelected","setIn","map","row","seats","seat","isReserved","isPurchased","SeatModel","price","defaultOrder","List","order","mergeIn","filter","removeIn","createRootReducer","combineReducers","configureStore","preLoadedState","createStore","compose","applyMiddleware","thunk","logger","window","__REDUX_DEVTOOLS_EXTENSION__","PageWrapper","styled","div","StyledPicker","Wrapper","Hall","Screen","StyledRow","RowContent","RowLeftTitle","RowRightTitle","StyledSeat","props","span","skip","css","Tip","TipRow","TipSeat","TipPrice","connect","state","ownProps","toggleSeat","dispatch","addSeatToOrder","removeSeatFromOrder","number","row_number","onClick","getLTitle","getRTitle","id","style","index","key","uuid","StyledLegend","SampleFree","SampleSelected","SampleReserved","SamplePurchased","SampleLabel","LegendTip","Legend","StyledFooter","ShortOverall","enabled","FullOverall","OrderInfo","ActionButton","totalSelected","size","totalPrice","reduce","acc","reserveOrder","buyOrder","StyledHeader","SessionTitle","SessionSubtitle","Date","toLocaleDateString","undefined","month","day","hour","minute","StyledLoader","Loader","src","alt","loadSessionStart","loadSessionSuccess","res","status","data","sessionMockData","setTimeout","useEffect","Main","App","store","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f468d440.chunk.js","sourcesContent":["import { Record } from \"immutable\";\r\nimport {\r\n  FAILED,\r\n  LOAD_SESSION,\r\n  START,\r\n  SUCCESS,\r\n  SELECT_SEAT,\r\n  DESELECT_SEAT,\r\n  RESERVE_ORDER,\r\n  BUY_ORDER\r\n} from \"../config/actionconst\";\r\n\r\n// const SeatModel = Record({\r\n//   number: null,\r\n//   skip: 0,\r\n//   span: 0,\r\n//   isSelected: false,\r\n//   isReserved: false,\r\n//   isPurchased: false\r\n// });\r\n//\r\n// const RowModel = Record({\r\n//   number: null,\r\n//   type: '__default_row_type__',\r\n//   seats: []\r\n// });\r\n\r\nconst HallModel = Record({\r\n  name: \"__default_hall_name__\",\r\n  rows: []\r\n});\r\n\r\nconst SessionModel = Record({\r\n  hallTitle: \"\",\r\n  movieTitle: \"\",\r\n  timestamp: null,\r\n  place: {\r\n    country: \"\",\r\n    city: \"\",\r\n    name: \"\"\r\n  },\r\n  hall: new HallModel()\r\n});\r\n\r\nconst ReducerState = Record({\r\n  entities: new SessionModel(),\r\n  loading: false,\r\n  loaded: false\r\n});\r\n\r\nconst defaultSession = new ReducerState();\r\n\r\nexport default (session = defaultSession, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOAD_SESSION + START:\r\n      return session.set(\"loading\", true).set(\"loaded\", false);\r\n\r\n    case LOAD_SESSION + SUCCESS:\r\n      return session\r\n        .update(\"entities\", entities => entities.mergeDeep(payload))\r\n        .set(\"loading\", false)\r\n        .set(\"loaded\", true);\r\n\r\n    case LOAD_SESSION + FAILED:\r\n      return session;\r\n\r\n    case SELECT_SEAT:\r\n      return session.updateIn(\r\n        [\"entities\", \"hall\", \"rows\", payload.row_id, \"seats\", payload.seat_id],\r\n        value => ({\r\n          ...value,\r\n          isSelected: true\r\n        })\r\n      );\r\n\r\n    case DESELECT_SEAT:\r\n      return session.updateIn(\r\n        [\"entities\", \"hall\", \"rows\", payload.row_id, \"seats\", payload.seat_id],\r\n        value => ({\r\n          ...value,\r\n          isSelected: false\r\n        })\r\n      );\r\n\r\n    case RESERVE_ORDER:\r\n      return session.setIn(\r\n        [\"entities\", \"hall\", \"rows\"],\r\n        session.entities.hall.rows.map(row => ({\r\n          ...row,\r\n          seats: row.seats.map(seat =>\r\n            seat.isSelected\r\n              ? {\r\n                  ...seat,\r\n                  isReserved: seat.isSelected,\r\n                  isSelected: false\r\n                }\r\n              : { ...seat }\r\n          )\r\n        }))\r\n      );\r\n\r\n    case BUY_ORDER:\r\n      return session.setIn(\r\n        [\"entities\", \"hall\", \"rows\"],\r\n        session.entities.hall.rows.map(row => ({\r\n          ...row,\r\n          seats: row.seats.map(seat =>\r\n            seat.isSelected\r\n              ? {\r\n                  ...seat,\r\n                  isPurchased: seat.isSelected,\r\n                  isSelected: false\r\n                }\r\n              : { ...seat }\r\n          )\r\n        }))\r\n      );\r\n\r\n    default:\r\n      return session;\r\n  }\r\n};\r\n","export const LOAD_SESSION = \"LOAD_SESSION\";\r\n\r\nexport const SELECT_SEAT = \"SELECT_SEAT\";\r\nexport const DESELECT_SEAT = \"DESELECT_SEAT\";\r\n\r\nexport const START = \"_START\";\r\nexport const SUCCESS = \"_SUCCESS\";\r\nexport const FAILED = \"_FAILED\";\r\n\r\nexport const ADD_SEAT_TO_ORDER = \"ADD_SEAT_TO_ORDER\";\r\nexport const REMOVE_SEAT_FROM_ORDER = \"REMOVE_SEAT_FROM_ORDER\";\r\n\r\nexport const RESERVE_ORDER = \"RESERVE_ORDER\";\r\nexport const BUY_ORDER = \"BUY_ORDER\";\r\n","import { Record, List } from \"immutable\";\r\nimport {\r\n  ADD_SEAT_TO_ORDER,\r\n  REMOVE_SEAT_FROM_ORDER,\r\n  RESERVE_ORDER,\r\n  BUY_ORDER\r\n} from \"../config/actionconst\";\r\n\r\n// const SeatModel = Record({\r\n\r\n// });\r\n\r\nexport const SeatModel = Record({\r\n  row_id: null,\r\n  seat_id: null,\r\n  row: null,\r\n  seat: null,\r\n  price: null\r\n});\r\n\r\nconst ReducerState = Record({\r\n  seats: List([], SeatModel)\r\n});\r\n\r\nconst defaultOrder = new ReducerState();\r\n\r\nexport default (order = defaultOrder, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_SEAT_TO_ORDER:\r\n      return order.mergeIn([\"seats\"], payload);\r\n\r\n    case REMOVE_SEAT_FROM_ORDER:\r\n      return order.updateIn([\"seats\"], seats => {\r\n        return seats.filter(\r\n          seat =>\r\n            !(\r\n              seat.row_id === payload.row_id && seat.seat_id === payload.seat_id\r\n            )\r\n        );\r\n      });\r\n\r\n    case RESERVE_ORDER:\r\n      return order.removeIn([\"seats\"]);\r\n\r\n    case BUY_ORDER:\r\n      return order.removeIn([\"seats\"]);\r\n\r\n    default:\r\n      return order;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport session from \"./session\";\r\nimport order from \"./order\";\r\n\r\n/**\r\n * Root reducer creator\r\n */\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    session,\r\n    order\r\n  });\r\n\r\nexport default createRootReducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createRootReducer from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n/**\r\n * configure store\r\n */\r\nexport const configureStore = preLoadedState => {\r\n  return createStore(\r\n    createRootReducer(),\r\n    preLoadedState ? preLoadedState : {},\r\n    compose(\r\n      applyMiddleware(\r\n        thunk,\r\n        logger\r\n      ),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: #24262c;\r\n  color: #fff;\r\n`;\r\n\r\nexport const StyledPicker = styled.div`\r\n  background: #24262c;\r\n  flex: 1;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  perspective: 1000px;\r\n`;\r\n\r\nexport const Hall = styled.div`\r\n  display: block;\r\n  transform: rotateX(20deg);\r\n`;\r\n\r\nexport const Screen = styled.div`\r\n  height: 60px;\r\n  line-height: 60px;\r\n  text-align: center;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  text-transform: uppercase;\r\n  width: 400px;\r\n  transform: rotateX(-50deg);\r\n  color: #2d2d2d;\r\n  user-select: none;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledRow = styled.div`\r\n  display: block;\r\n  height: 30px;\r\n  white-space: nowrap;\r\n  margin: 10px;\r\n  border-radius: 2px;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nexport const RowContent = styled.div`\r\n  position: relative;\r\n  min-width: 100%;\r\n  width: auto;\r\n`;\r\n\r\nexport const RowLeftTitle = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  flex-direction: row;\r\n  text-align: center;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 0 20px 0 0;\r\n  color: grey;\r\n  user-select: none;\r\n  float: left;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const RowRightTitle = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  flex-direction: row;\r\n  text-align: center;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 0 0 0 20px;\r\n  color: grey;\r\n  user-select: none;\r\n  float: right;\r\n  font-size: 12px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSeat = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  text-align: center;\r\n  line-height: 30px;\r\n  width: calc(\r\n    30px +\r\n      ${props => (props.span > 1 ? (props.span - 1) * 40 + \"px\" : 0 + \"px\")}\r\n  );\r\n  height: 30px;\r\n  margin: 0 5px 0 calc(5px + 40px * ${props => (props.skip ? props.skip : 0)});\r\n  border-radius: 3px;\r\n  background: #ab47bc;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: 0.24s;\r\n  color: #ffffff;\r\n\r\n  ${props =>\r\n    !(props.isReserved || props.isSelected || props.isPurchased) &&\r\n    css`\r\n      &:hover {\r\n        background: #ffcd00;\r\n        color: black;\r\n      }\r\n    `}\r\n  \r\n  ${props =>\r\n    props.isSelected &&\r\n    css`\r\n      background: #ffcd00;\r\n      color: #000;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isReserved &&\r\n    css`\r\n      background: #58205f;\r\n      color: #000;\r\n      cursor: default;\r\n    `}  \r\n\r\n  ${props =>\r\n    props.isPurchased &&\r\n    css`\r\n      background: #191919;\r\n      color: #000;\r\n      cursor: default;\r\n    `}\r\n`;\r\n\r\nexport const Tip = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 900;\r\n  background: #fff;\r\n  color: #000;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.3);\r\n\r\n  ${StyledSeat}:hover & {\r\n    display: block;\r\n  }\r\n\r\n  &:hover {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const TipRow = styled.div`\r\n  display: inline-block;\r\n  line-height: 10px;\r\n`;\r\n\r\nexport const TipSeat = styled.div`\r\n  display: inline-block;\r\n  line-height: 10px;\r\n`;\r\n\r\nexport const TipPrice = styled.div`\r\n  font-weight: 700;\r\n`;\r\n\r\n//isReserved - #47204e\r\n//isReserved - #47204e\r\n","import {\r\n  LOAD_SESSION,\r\n  START,\r\n  SUCCESS,\r\n  SELECT_SEAT,\r\n  DESELECT_SEAT\r\n} from \"../config/actionconst\";\r\nimport sessionMockData from \"../mock/sessionMockData\";\r\n\r\nexport const loadSessionStart = () => dispatch => {\r\n  dispatch({\r\n    type: LOAD_SESSION + START\r\n  });\r\n};\r\n\r\nexport const loadSessionSuccess = () => dispatch => {\r\n  const res = {\r\n    status: 200,\r\n    data: { ...sessionMockData }\r\n  };\r\n\r\n  dispatch({\r\n    type: LOAD_SESSION + START\r\n  });\r\n\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: LOAD_SESSION + SUCCESS,\r\n      payload: res.data\r\n    });\r\n  }, 1500);\r\n};\r\n\r\nexport const toggleSeat = (row_id, seat_id, isSelected) => dispatch => {\r\n  dispatch({\r\n    type: isSelected ? DESELECT_SEAT : SELECT_SEAT,\r\n    payload: {\r\n      row_id,\r\n      seat_id\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { StyledSeat, Tip, TipSeat, TipRow, TipPrice } from \"./Seat.sc\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSeat } from \"../../../../actions/session\";\r\nimport { addSeatToOrder, removeSeatFromOrder } from \"../../../../actions/order\";\r\n\r\nconst Seat = ({\r\n  seat: { skip, span, number, isSelected, isReserved, isPurchased, price },\r\n  seat_id,\r\n  row_id,\r\n  row_number,\r\n  toggleSeat,\r\n  addSeatToOrder,\r\n  removeSeatFromOrder\r\n}) => {\r\n  const handleSeatClick = () => {\r\n    if (!(isReserved || isPurchased)) {\r\n      toggleSeat(row_id, seat_id, isSelected);\r\n      isSelected\r\n        ? removeSeatFromOrder(row_id, seat_id)\r\n        : addSeatToOrder(row_id, seat_id, row_number, number, price);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledSeat\r\n      skip={skip}\r\n      span={span}\r\n      onClick={handleSeatClick}\r\n      isSelected={isSelected}\r\n      isReserved={isReserved}\r\n      isPurchased={isPurchased}\r\n    >\r\n      {isReserved || isPurchased ? null : (\r\n        <Tip>\r\n          <TipRow>Row: {row_number}</TipRow>, <TipSeat>Seat: {number}</TipSeat>\r\n          <TipPrice>{price} $</TipPrice>\r\n        </Tip>\r\n      )}\r\n\r\n      {number}\r\n    </StyledSeat>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  seat:\r\n    state.session.entities.hall.rows[ownProps.row_id].seats[ownProps.seat_id]\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    toggleSeat,\r\n    addSeatToOrder,\r\n    removeSeatFromOrder\r\n  }\r\n)(Seat);\r\n","import {\r\n  ADD_SEAT_TO_ORDER,\r\n  REMOVE_SEAT_FROM_ORDER,\r\n  RESERVE_ORDER,\r\n  BUY_ORDER\r\n} from \"../config/actionconst\";\r\n\r\nexport const addSeatToOrder = (\r\n  row_id,\r\n  seat_id,\r\n  row,\r\n  seat,\r\n  price\r\n) => dispatch => {\r\n  dispatch({\r\n    type: ADD_SEAT_TO_ORDER,\r\n    payload: {\r\n      row_id,\r\n      seat_id,\r\n      row,\r\n      seat,\r\n      price\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeSeatFromOrder = (row_id, seat_id) => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_SEAT_FROM_ORDER,\r\n    payload: {\r\n      row_id,\r\n      seat_id\r\n    }\r\n  });\r\n};\r\n\r\nexport const reserveOrder = () => dispatch => {\r\n  dispatch({\r\n    type: RESERVE_ORDER\r\n  });\r\n};\r\n\r\nexport const buyOrder = () => dispatch => {\r\n  dispatch({\r\n    type: BUY_ORDER\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport uuid from \"uuid\";\r\nimport { StyledRow, RowLeftTitle, RowRightTitle, RowContent } from \"./Row.cs\";\r\nimport Seat from \"../Seat\";\r\n\r\nconst Row = ({ row, id }) => {\r\n  const { seats, number } = row;\r\n\r\n  const getSeats = () =>\r\n    seats.map((seat, index) => (\r\n      <Seat seat_id={index} row_id={id} row_number={number} key={uuid()} />\r\n    ));\r\n\r\n  return (\r\n    <StyledRow>\r\n      <RowContent style={{}}>\r\n        {getLTitle(number)}\r\n\r\n        {getSeats()}\r\n\r\n        {getRTitle(number)}\r\n      </RowContent>\r\n    </StyledRow>\r\n  );\r\n};\r\n\r\nconst getLTitle = number =>\r\n  number ? <RowLeftTitle>{number}</RowLeftTitle> : <RowLeftTitle />;\r\nconst getRTitle = number =>\r\n  number ? <RowRightTitle>{number}</RowRightTitle> : <RowRightTitle />;\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  row: state.session.entities.hall.rows[ownProps.id]\r\n});\r\n\r\nexport default connect(mapStateToProps)(Row);\r\n","import React from \"react\";\r\nimport { Hall, Screen, Wrapper } from \"./Picker.sc\";\r\nimport Row from \"./Row\";\r\nimport uuid from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Picker = ({ rows }) => {\r\n  const getRows = () =>\r\n    rows.map((row, index) => <Row id={index} key={uuid()} />);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Screen>SCREEN</Screen>\r\n      <Hall>{getRows()}</Hall>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  rows: state.session.entities.hall.rows\r\n});\r\n\r\nexport default connect(mapStateToProps)(Picker);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLegend = styled.div`\r\n  flex: 1;\r\n  margin: 20px 0;\r\n  text-align: left;\r\n  color: #fff;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  min-width: 400px;\r\n`;\r\n\r\nexport const SampleFree = styled.div`\r\n  display: inline-block;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  width: 20px;\r\n  background: #ab47bc;\r\n  color: #fff;\r\n  border-radius: 3px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const SampleSelected = styled.div`\r\n  display: inline-block;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  width: 20px;\r\n  background: #ffcd00;\r\n  color: #000;\r\n  border-radius: 3px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const SampleReserved = styled.div`\r\n  display: inline-block;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  width: 20px;\r\n  background: #58205f;\r\n  color: #000;\r\n  border-radius: 3px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const SamplePurchased = styled.div`\r\n  display: inline-block;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  width: 20px;\r\n  background: #191919;\r\n  color: #000;\r\n  border-radius: 3px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const SampleLabel = styled.span`\r\n  margin-left: 5px;\r\n`;\r\n\r\nexport const LegendTip = styled.div`\r\n  margin-right: 20px;\r\n  user-select: none;\r\n  font-size: 0.8rem;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  LegendTip,\r\n  SampleFree,\r\n  SamplePurchased,\r\n  SampleReserved,\r\n  SampleSelected,\r\n  StyledLegend,\r\n  SampleLabel\r\n} from \"./Legend.sc\";\r\n\r\nconst Legend = () => {\r\n  return (\r\n    <StyledLegend>\r\n      <LegendTip>\r\n        <SampleFree>1</SampleFree>\r\n        <SampleLabel>Free</SampleLabel>\r\n      </LegendTip>\r\n      <LegendTip>\r\n        <SampleSelected>1</SampleSelected>\r\n        <SampleLabel>Selected</SampleLabel>\r\n      </LegendTip>\r\n      <LegendTip>\r\n        <SampleReserved>1</SampleReserved>\r\n        <SampleLabel>Reserved</SampleLabel>\r\n      </LegendTip>\r\n      <LegendTip>\r\n        <SamplePurchased>1</SamplePurchased>\r\n        <SampleLabel>Purchased</SampleLabel>\r\n      </LegendTip>\r\n    </StyledLegend>\r\n  );\r\n};\r\n\r\nexport default Legend;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.div`\r\n  border-top: 1px solid #696969;\r\n  padding: 0 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  background: #24262c;\r\n`;\r\n\r\nexport const ShortOverall = styled.span`\r\n  display: inline-block;\r\n  position: relative;\r\n  font-weight: 700;\r\n  border-bottom: 1px dashed transparent;\r\n  cursor: default;\r\n  color: #818181;\r\n\r\n  ${props =>\r\n    props.enabled &&\r\n    css`\r\n      border-bottom: 1px dashed #fff;\r\n      cursor: pointer;\r\n      color: #fff;\r\n    `}\r\n`;\r\n\r\nexport const FullOverall = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: auto;\r\n  background: #fff;\r\n  color: #000;\r\n  min-width: 100%;\r\n  text-align: center;\r\n  padding: 10px 5px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n\r\n  ${props =>\r\n    props.enabled &&\r\n    css`\r\n      ${ShortOverall}:hover & {\r\n        display: block;\r\n      }\r\n    `}\r\n\r\n  & div {\r\n    display: inline-block;\r\n    text-wrap: none;\r\n  }\r\n`;\r\n\r\nexport const OrderInfo = styled.div`\r\n  flex: 1;\r\n  margin: 20px 0;\r\n  text-align: right;\r\n  color: #fff;\r\n  min-width: 400px;\r\n`;\r\n\r\nexport const ActionButton = styled.span`\r\n         margin: 0 10px;\r\n         background: #191919;\r\n         border-bottom: 3px solid #191919;\r\n         color: #fff;\r\n         padding: 6px 12px;\r\n         border-radius: 3px;\r\n         user-select: none;\r\n         cursor: not-allowed;\r\n         text-transform: uppercase;\r\n         font-size: 24px;\r\n         transition: 0.24s;\r\n\r\n         ${props =>\r\n           props.enabled &&\r\n           css`\r\n             background: #ab47bc;\r\n             border-color: #573368;\r\n             cursor: pointer;\r\n\r\n             &:hover {\r\n               background: #ffcd00;\r\n               border-color: #c67d00;\r\n               color: #000;\r\n             }\r\n           `}\r\n       `;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { buyOrder, reserveOrder } from \"../../../actions/order\";\r\nimport Legend from \"../Legend\";\r\nimport {\r\n  ActionButton,\r\n  StyledFooter,\r\n  OrderInfo,\r\n  ShortOverall,\r\n  FullOverall\r\n} from \"./Footer.sc\";\r\n\r\nconst Footer = ({\r\n  totalSelected,\r\n  totalPrice,\r\n  reserveOrder,\r\n  buyOrder,\r\n  seats\r\n}) => {\r\n  const getFullOverall = () => {\r\n    return (\r\n      <FullOverall enabled={!!totalSelected}>\r\n        {seats.map(seat => (\r\n          <div>\r\n            Row {seat.row}, Seat {seat.seat}\r\n          </div>\r\n        ))}\r\n      </FullOverall>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledFooter>\r\n      <Legend />\r\n\r\n      <OrderInfo>\r\n        <ShortOverall enabled={!!totalSelected}>\r\n          {getFullOverall()}\r\n          {totalSelected} ticket(s) - {totalPrice} $\r\n        </ShortOverall>\r\n        <ActionButton\r\n          enabled={!!totalSelected}\r\n          onClick={() => totalSelected && reserveOrder()}\r\n        >\r\n          RESERVE\r\n        </ActionButton>\r\n        or\r\n        <ActionButton\r\n          enabled={!!totalSelected}\r\n          onClick={() => totalSelected && buyOrder()}\r\n        >\r\n          BUY\r\n        </ActionButton>\r\n      </OrderInfo>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  seats: state.order.seats,\r\n  totalSelected: state.order.seats.size,\r\n  totalPrice: state.order.seats.reduce((acc, seat) => acc + seat.price, 0)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    reserveOrder,\r\n    buyOrder\r\n  }\r\n)(Footer);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.div`\r\n  padding: 0 40px;\r\n  border-bottom: 1px solid #696969;\r\n  color: #fff;\r\n  background: #24262c;\r\n`;\r\n\r\nexport const SessionTitle = styled.div`\r\n  flex: 0 0;\r\n  margin-top: 20px;\r\n  font-weight: 700;\r\n  letter-spacing: 3px;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nexport const SessionSubtitle = styled.div`\r\n  flex: 0 0;\r\n  margin-bottom: 20px;\r\n\r\n  & p {\r\n    margin: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledHeader, SessionSubtitle, SessionTitle } from \"./Header.sc\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Header = ({ session: { timestamp, movieTitle, place } }) => {\r\n  const getFormatDate = () => {\r\n    let options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    };\r\n    let schedule = new Date(timestamp * 1000);\r\n    return schedule.toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <SessionTitle>{movieTitle}</SessionTitle>\r\n\r\n      <SessionSubtitle>\r\n        <p>{getFormatDate()}</p>\r\n        <p>\r\n          <b>{place.name}</b> | {place.city}, {place.country}\r\n        </p>\r\n      </SessionSubtitle>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  session: state.session.entities\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <StyledLoader>\r\n      <img src=\"./assets/gif/Blocks-1s-200px-8px.svg\" alt=\"\" />\r\n    </StyledLoader>\r\n  );\r\n};\r\n\r\nconst StyledLoader = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Loader;\r\n","import React, { useEffect } from \"react\";\r\nimport { PageWrapper, StyledPicker } from \"./Session.sc\";\r\nimport Picker from \"./Picker\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadSessionStart, loadSessionSuccess } from \"../../actions/session\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst Session = ({\r\n  loadSessionStart,\r\n  loadSessionSuccess,\r\n  loading,\r\n  loaded,\r\n  session\r\n}) => {\r\n  useEffect(() => {\r\n    loadSessionStart();\r\n    loadSessionSuccess();\r\n  }, [loadSessionStart, loadSessionSuccess]);\r\n\r\n  const getPicker = () => (\r\n    <PageWrapper>\r\n      <Header />\r\n\r\n      <StyledPicker>\r\n        <Picker />\r\n      </StyledPicker>\r\n\r\n      <Footer />\r\n    </PageWrapper>\r\n  );\r\n\r\n  const getLoader = () => (\r\n    <PageWrapper>\r\n      <Loader />\r\n    </PageWrapper>\r\n  );\r\n\r\n  if (loaded && !loading && session) return getPicker();\r\n  else return getLoader();\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.session.loading,\r\n  loaded: state.session.loaded,\r\n  session: state.session.entities\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    loadSessionStart,\r\n    loadSessionSuccess\r\n  }\r\n)(Session);\r\n","import React from \"react\";\nimport { configureStore } from \"../store\";\nimport styled from \"styled-components\";\nimport Session from \"./Session\";\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  const store = configureStore();\n\n  return (\n    <Provider store={store}>\n      <Main>\n        <Session />\n      </Main>\n    </Provider>\n  );\n}\n\nconst Main = styled.div`\n  min-height: 100%;\n  height: 100vh;\n  min-width: 100%;\n  width: 100vw;\n  background: #dcdcdd;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}